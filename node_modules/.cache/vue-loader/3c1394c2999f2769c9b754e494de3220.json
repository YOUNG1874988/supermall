{"remainingRequest":"/Users/yangjun/Documents/MY PROJECTS/LearnVuejs/supermall/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yangjun/Documents/MY PROJECTS/LearnVuejs/supermall/src/views/cart/Cart.vue?vue&type=style&index=0&id=7fb050a5&scoped=true&lang=css&","dependencies":[{"path":"/Users/yangjun/Documents/MY PROJECTS/LearnVuejs/supermall/src/views/cart/Cart.vue","mtime":1575370564572},{"path":"/Users/yangjun/Documents/MY PROJECTS/LearnVuejs/supermall/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yangjun/Documents/MY PROJECTS/LearnVuejs/supermall/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/yangjun/Documents/MY PROJECTS/LearnVuejs/supermall/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/yangjun/Documents/MY PROJECTS/LearnVuejs/supermall/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yangjun/Documents/MY PROJECTS/LearnVuejs/supermall/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLyogQGltcG9ydCB1cmwoKTsg5byV5YWlY3Nz57G7ICovCi5wYXJlbnRzewogICAgaGVpZ2h0OiA0MDBweDsKICAgIG92ZXJmbG93OnNjcm9sbDsKfQovKiDnu5nlrrnlmajorr7nva5mbGV45bGe5oCn5ZCO77yM5YW25a2Q5YWD57Sg5bCx5Lya5oyJ54Wn54i255uS5a2Q55qEZmxleOWxnuaAp+i/m+ihjOWxleekuiAqLwouY29udGFpbmVyewogICAgZGlzcGxheTogZmxleDsKICAgIC8qIOS9v+WtkOWFg+e0oOWPr+S7peaMieeFp+WFtuacrOi6q+WuveW6pui/m+ihjOaNouihjO+8jOWmguaenOS4jeiuvue9rndyYXDlsZ7mgKfvvIzmiYDmnInnmoTlrZDlhYPntKDkvJrlsZXnpLrlnKjkuIDooYwgKi8KICAgIGZsZXgtd3JhcDogd3JhcDsKICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kOwp9Ci5pdGVtewoKICAgIC8qIGZsZXgtd3JhcDogd3JhcDsgKi8KICAgIHdpZHRoOiA0NyU7Cn0KLml0ZW0gaW1newp3aWR0aDogMTAwJTsKYm9yZGVyLXJhZGl1czogNSU7Cgp9Cgo="},{"version":3,"sources":["Cart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"Cart.vue","sourceRoot":"src/views/cart","sourcesContent":["<!--  -->\n<template>\n<div class='parents'>\n    <div>\n        <ul>\n            <li>非加载内容1</li>\n            <li>非加载内容2</li>\n            <li>非加载内容3</li>\n            <li>非加载内容4</li>\n            <li>非加载内容5</li>\n            <li>非加载内容6</li>\n            <li>非加载内容7</li>\n            <li>非加载内容8</li>\n            <li>非加载内容9</li>\n            <li>非加载内容10</li>\n            <li>非加载内容11</li>\n            <li>非加载内容12</li>\n            <li>非加载内容13</li>\n            <li>非加载内容14</li>\n            <li>非加载内容15</li>\n            <li>非加载内容16</li>\n            <li>非加载内容17</li>\n            <li>非加载内容18</li>\n            <li>非加载内容19</li>\n            <li>非加载内容20</li>\n        </ul>\n    </div>\n\n    <mt-loadmore\n      :bottom-method=\"loadBottom\"\n      :bottom-all-loaded=\"allLoaded\"\n      :auto-fill=\"false\"\n      ref=\"loadmore\"\n    >\n    <div class=\"container\">\n      <div class=\"item\" v-for=\"(item,index) in list\" :key=\"index\">\n          <img :src=\"item.img\" alt=\"\">\n        <div class=\"title\">{{item.title}}</div>\n        <div class=\"price\">{{item.price}}</div>\n      </div>\n\n    </div>\n    </mt-loadmore>\n\n</div>\n\n \n</template>\n\n<script>\nimport { Loadmore } from \"mint-ui\";//引入相关子功能\n// Vue.component(Loadmore.name,Loadmore)\n\nimport { getHomeGoods } from \"network/home\";//导入商品数据请求\n\nexport default {\ndata() {\nreturn {\n list: [],//储存数据\n allLoaded: false\n}\n},\n//生命周期 - 创建完成（访问当前this实例）\ncreated() {\n\n},\n//生命周期 - 挂载完成（访问DOM元素）\nmounted() {\n    // this.getList(1)\n},\ncomponents:{\n    \"mt-loadmore\":Loadmore\n},\nmethods:{\n    //当上拉时调用的方法\n    loadBottom() {\n      this.$refs.loadmore.onBottomLoaded();\n      this.getList(); \n    },\n    //此处是你通过调用后端接口获取的信息\n    getList(type) {\n          getHomeGoods(type).then(res => {\n        console.log(res);\n        //   this.list = this.list.concat(res.data.body.content);\n        //   console.log(this.list);\n        //将请求到的数据推到该组件对应类型的goods中\n        this.list.push(...res.data.data);\n        console.log(this.list+'are yo ok??')\n        //将page+1，下次调用该方法时就是加载下一页了\n        // this.goods[type].page += 1;\n          })\n    }\n}\n}\n</script>\n<style scoped>\n/* @import url(); 引入css类 */\n.parents{\n    height: 400px;\n    overflow:scroll;\n}\n/* 给容器设置flex属性后，其子元素就会按照父盒子的flex属性进行展示 */\n.container{\n    display: flex;\n    /* 使子元素可以按照其本身宽度进行换行，如果不设置wrap属性，所有的子元素会展示在一行 */\n    flex-wrap: wrap;\n    justify-content: space-around;\n}\n.item{\n\n    /* flex-wrap: wrap; */\n    width: 47%;\n}\n.item img{\nwidth: 100%;\nborder-radius: 5%;\n\n}\n\n</style>"]}]}